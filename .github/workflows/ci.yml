name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y imagemagick feh xvfb

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install imagemagick

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov

    # Linting moved to separate job

    - name: Test with pytest
      run: |
        # Use xvfb-run on Linux to handle GUI tests
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          xvfb-run -a pytest tests/ --cov=pywal --cov-report=xml
        else
          pytest tests/ --cov=pywal --cov-report=xml
        fi

    # Codecov upload disabled for now
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./coverage.xml
    #     flags: unittests
    #     name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff isort

    - name: Lint with ruff
      run: ruff check .

    - name: Format check with ruff
      run: ruff format --check .

    - name: Check import sorting with isort
      run: isort --check-only .

  # Security job disabled - bandit has many false positives for subprocess usage
  # security:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: "3.11"
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install bandit safety
  #   - name: Security check with bandit
  #     run: bandit -r pywal/
  #   - name: Safety check
  #     run: safety check

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
